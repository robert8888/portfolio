@mixin scroll(
  $track-color,
  $thumb-color,
  $thumb-hover-color,
  $width: 15px
){
  cursor: pointer;
  &::-webkit-scrollbar {
    width: $width;
  }

  &::-webkit-scrollbar-track,
  &::-webkit-scrollbar-track-piece,
  &::-webkit-scrollbar-corner{
    background: $track-color;
  }

  &::-webkit-scrollbar-thumb {
    background: $thumb-color;
  }

  &::-webkit-scrollbar-thumb:hover {
    background: $thumb-hover-color;
  }
}


@mixin scrollTight(
  $track-color,
  $thumb-color,
  $thumb-hover-color,
  $width: 15px
){
  //for firefox
  scrollbar-color: $thumb-color $track-color;
  //for rest
  &::-webkit-scrollbar {
    width: $width;
  }

  &::-webkit-scrollbar-track,
  &::-webkit-scrollbar-track-piece,
  &::-webkit-scrollbar-corner{
    background-image: linear-gradient(to left, $track-color 1px, transparent 2px);
    background-size: 2px 100%;
    background-position: center;
    background-repeat: no-repeat;
  }

  &::-webkit-scrollbar-thumb {
    background: $thumb-color;
  }

  &::-webkit-scrollbar-thumb:hover {
    background: $thumb-hover-color;
  }
}


@mixin pseudo($type: 'after', $position: absolute, $stretch: true){
  @if $position == absolute {
    position: relative;
    &:#{$type}{
      @if $stretch == true {
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;
      }
    }
  }
  &:#{$type}{
    position: $position;
    content: "";
    display: block;
    @content
  }
}

@mixin pseudo-content($type: 'after'){
  &:#{$type}{
    @content
  }
}

@mixin transition-center(){
  left: 50%;
  top: 50%;
  transform: translate(-50%, -50%);
}

@mixin stacking($name){
  z-index: map-get($stackingIndex, $name);
}

@mixin input(){
  background: var(--color-bg-secondary);
  color: var(--color-text);
  outline: none;
  border-color: var(--color-pallet-4);
  &:focus{
    border-color: var(--color-pallet-10-light);
  }

  &:-webkit-autofill,
  &:-webkit-autofill:hover,
  &:-webkit-autofill:focus{
    background: var(--color-bg-secondary);
    border: 1px solid var(--color-pallet-4);
    -webkit-text-fill-color: var(--color-text);
    -webkit-box-shadow: 0 0 0px 1000px var(--color-bg-secondary) inset;
    transition: background-color 5000s ease-in-out 0s;
  }
  &:-webkit-autofill:hover{
    border: 1px solid var(--color-pallet-10-light);
  }
}


@mixin button(){
  color: var(--color-text);
  display: inline-block;
  background: var(--color-pallet-4);
  border: none;
  padding: 7px 15px;
  font-weight: 700;
  border-radius: 3px;
  white-space: nowrap;
  cursor: pointer;
  font-size: 10pt;
  &:hover{
    background: var(--color-pallet-2);
  }
}

@mixin input-file(){
  //firefox
  &::file-selector-button{
    @include button();
  }
  &:hover::file-selector-button{
    background: var(--color-pallet-2);
  }
  //others
  &::-webkit-file-upload-button
  {
    @include button();
  }
  &:hover{
    &::-webkit-file-upload-button {
      background: var(--color-pallet-2);
    }
  }
}

@mixin input-submit(){
  background: var(--color-pallet-4);
  &:hover{
    background: var(--color-pallet-4-light);
  }
  &.default{
    background: var(--color-pallet-1);
    &:hover{
      background: var(--color-pallet-1-light);
    }
  }
}

@mixin select(){
  @include input();
  appearance: none;
  -webkit-appearance: none;
  position: relative;
  padding-right: 20px;
  vertical-align: middle;
  line-height: 1em;
  background-image:
          linear-gradient(45deg, transparent 50%, var(--color-pallet-1-light) 50%),
          linear-gradient(135deg, var(--color-pallet-1-light) 50%, transparent 50%);
  background-position:
          calc(100% - 10px) calc(1em + 0px),
          calc(100% - 5px) calc(1em + 0px);
  background-size:
          6px 6px,
          6px 6px;
  background-repeat: no-repeat;
  &:focus{
    background-image:
            linear-gradient(45deg, var(--color-pallet-10-light) 50%, transparent 50%),
            linear-gradient(135deg, transparent 50%, var(--color-pallet-10-light) 50%);
    background-position:
            calc(100% - 5px) calc(1em + 0px),
            calc(100% - 10px) calc(1em + 0px);
    background-size:
            6px 6px,
            6px 6px;
    background-repeat: no-repeat;
    border-color: grey;
    outline: 0;
  }
}


@mixin blackSvgToColor(){
  filter:
          invert(27%)
          sepia(51%)
          saturate(2878%)
          hue-rotate(var(--black-icon-hue))
          brightness(var(--black-icon-brightness))
          contrast(97%);
  &:hover{
    filter:
            invert(27%)
            sepia(51%)
            saturate(2878%)
            hue-rotate(var(--black-icon-hover-hue))
            brightness(var(--black-icon-hover-brightness))
            contrast(97%);
  }
}

@mixin link--icon-background-before($url) {
  background: none;
  padding-left: 25px;
  position: relative;
  &::before{
    content: "";
    position: absolute;
    left: 0;
    top: 0;
    display: block;
    width: 25px;
    height: 100%;
    background-image: url($url);
    background-repeat: no-repeat;
    background-size: 16px 16px;
    background-position: center left;
    @include blackSvgToColor();
  }
}



