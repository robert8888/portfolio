$grid-breakpoints: (
    xs: 0,
    xxsm: 300px,
    xsm: 400px,
    sm: 576px,
    md: 768px,
    lg: 992px,
    xl: 1280px,
    xxl: 1400px,
    xxxl: 1600px,
);

$grid-breakpoints-vertical: (
    xs: 0,
    sm: 640px,
    xmd: 740px,
    md: 969px,
    lg: 1200px
);

.l-container{
  width: 100%;
  max-width: 100%;
  box-sizing: border-box;
}

.l-row{
  display: flex;
  flex-wrap: wrap;
  width: 100%;
  justify-content: space-around;
  & > * {
    box-sizing: border-box;
  }
}

.l-col{
  width: 100%;
}

@each $break-point, $width in $grid-breakpoints{
  @for $size from 1 through 12 {
    @media screen and (min-width: $width) {
      .l-col-#{$break-point}-#{$size} {
        width: 100% *  ($size / 12);
      };
    }
  }
}
// under first
@for $size from 1 through 12 {
  @media screen and (max-width: map-get($grid-breakpoints, "xs")) {
    .l-col-xs-#{$size} {
      width: 100% *  ($size / 12);
    }
  }
}


// row gutters
@each $break-point, $width in $grid-breakpoints {
  @for $counter from 1 through 50 {
    @media screen and (min-width: $width) {
      .l-row-g-#{$break-point}-#{$counter * 5} {
        margin-top: $counter * 5px;
      }
    };
  }
}

// under first
@for $counter from 1 through 50 {
  @media screen and (max-width: map-get($grid-breakpoints, "xs")) {
    .l-row-g-xs-#{$counter * 5} {
      margin-top: $counter * 5px;
    }
  }
}



//media queries

@mixin media($size, $type: min,  $shift: 0) {
  @if map_has_key($grid-breakpoints, $size) {
    $width: map_get($grid-breakpoints, $size);
    @if $type == max {
      $width: $width - 1px;
    }
    @media only screen and (#{$type}-width: $width + $shift) {
      @content;
    }
  }
}

@mixin media-h($size, $type: min,  $shift: 0) {
  @if map_has_key($grid-breakpoints-vertical, $size) {
    $width: map_get($grid-breakpoints-vertical, $size);
    @if $type == max {
      $width: $width - 1px;
    }
    @media only screen and (#{$type}-height: $width + $shift) {
      @content;
    }
  }
}
