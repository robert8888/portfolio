# Generated by Django 3.1.5 on 2021-04-17 19:23

from django.db import migrations, models
import django.db.models.deletion
import django.db.models.manager
import parler.fields
import parler.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('contenttypes', '0002_remove_content_type_name'),
    ]

    operations = [
        migrations.CreateModel(
            name='Menu',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='', max_length=255, unique=True, verbose_name='Menu identification name')),
                ('template', models.CharField(choices=[('menus/menu-main.html', 'Main'), ('menus/menu-aside.html', 'Aside'), ('menus/menu-additional.html', 'Addtional'), ('menus/menu-main.html', 'Main'), ('menus/menu-aside.html', 'Aside'), ('menus/menu-additional.html', 'Addtional')], default='', max_length=255, verbose_name='Menu template')),
                ('style', models.CharField(default='', max_length=255, null=True)),
                ('description', models.TextField(blank=True, null=True, verbose_name='Menu description')),
            ],
        ),
        migrations.CreateModel(
            name='MenuItem',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('menu', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app_cms.menu')),
            ],
            options={
                'abstract': False,
            },
            bases=(parler.models.TranslatableModelMixin, models.Model),
            managers=[
                ('default_manager', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='Page',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='', max_length=255, unique=True, verbose_name='Page name')),
                ('template', models.CharField(choices=[('page_index.html', 'Index'), ('page_index.html', 'Index'), ('page_projects.html', 'Projects'), ('page_project.html', 'Project')], default='', max_length=255, verbose_name='Page template name')),
                ('menu', models.ManyToManyField(blank=True, to='app_cms.Menu', verbose_name='Page menus')),
            ],
            options={
                'verbose_name': 'Page',
            },
        ),
        migrations.CreateModel(
            name='Path',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('page', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app_cms.page')),
            ],
            options={
                'abstract': False,
            },
            bases=(parler.models.TranslatableModelMixin, models.Model),
        ),
        migrations.CreateModel(
            name='Property',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='', max_length=255)),
                ('polymorphic_ctype', models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='polymorphic_app_cms.property_set+', to='contenttypes.contenttype')),
            ],
            options={
                'verbose_name': 'Property',
                'verbose_name_plural': 'Properties',
            },
        ),
        migrations.CreateModel(
            name='Section',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='only letters', max_length=255, unique=True, verbose_name='Section identification name')),
                ('template', models.CharField(choices=[('sections/section-footer.html', 'Section Footer'), ('sections/section-header.html', 'Section Header'), ('sections/section-welcome.html', 'Section Welcome'), ('sections/section-stack.html', 'Section Stack'), ('sections/section-projects.html', 'Section Project Slider'), ('sections/section-about.html', 'Section About'), ('sections/section-contact.html', 'Section Contact'), ('sections/section-footer.html', 'Section Footer'), ('sections/section-header.html', 'Section Header'), ('sections/section-welcome.html', 'Section Welcome'), ('sections/section-stack.html', 'Section Stack'), ('sections/section-projects.html', 'Section Project Slider'), ('sections/section-about.html', 'Section About'), ('sections/section-contact.html', 'Section Contact'), ('sections/section_projects_filters.html', 'Section Projects Filters'), ('sections/section_projects.html', 'Section Projects'), ('sections/section_project.html', 'Section Project')], default='', max_length=255, verbose_name='Section template name')),
                ('style', models.CharField(default='', max_length=255, null=True)),
            ],
            options={
                'verbose_name': 'Section',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='PropertyText',
            fields=[
                ('property_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='app_cms.property')),
            ],
            options={
                'verbose_name': 'Property Text',
            },
            bases=('app_cms.property', parler.models.TranslatableModelMixin, models.Model),
            managers=[
                ('default_manager', django.db.models.manager.Manager()),
                ('objects', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='PropertyTextLong',
            fields=[
                ('property_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='app_cms.property')),
            ],
            options={
                'verbose_name': 'Property Text Long',
            },
            bases=('app_cms.property', parler.models.TranslatableModelMixin, models.Model),
            managers=[
                ('default_manager', django.db.models.manager.Manager()),
                ('objects', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='PropertyTextRich',
            fields=[
                ('property_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='app_cms.property')),
            ],
            options={
                'verbose_name': 'Property Text Rich',
            },
            bases=('app_cms.property', parler.models.TranslatableModelMixin, models.Model),
            managers=[
                ('default_manager', django.db.models.manager.Manager()),
                ('objects', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='View',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('module_name', models.CharField(choices=[('app_projects.views.section_project.py', 'Section project'), ('app_projects.views.section_projects.py', 'Section projects'), ('app_projects.views.section_projects_filters.py', 'Section projects filters'), ('app_projects.views.section_projects_slider.py', 'Section projects slider'), ('app_projects.views.section_technologies.py', 'Section technologies'), ('app_owner.views.section_contact.py', 'Section contact'), ('app_owner.views.section_cv_download.py', 'Section cv download')], default='', max_length=255, null=True)),
                ('config', models.JSONField(blank=True, default=dict, verbose_name='View json configuration')),
                ('section', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='section', to='app_cms.section')),
            ],
        ),
        migrations.AddField(
            model_name='property',
            name='section',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app_cms.section'),
        ),
        migrations.CreateModel(
            name='PageSections',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order', models.PositiveIntegerField(default=0, verbose_name='Order')),
                ('page', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app_cms.page')),
                ('section', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app_cms.section')),
            ],
        ),
        migrations.AddField(
            model_name='page',
            name='section',
            field=models.ManyToManyField(through='app_cms.PageSections', to='app_cms.Section', verbose_name='Page sections'),
        ),
        migrations.CreateModel(
            name='PathTranslation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('language_code', models.CharField(db_index=True, max_length=15, verbose_name='Language')),
                ('url', models.CharField(blank=True, max_length=255, null=True, verbose_name='Regex url pattern - groups as parameters')),
                ('pattern', models.CharField(max_length=255, verbose_name='Regex path pattern - groups as parameters')),
                ('master', parler.fields.TranslationsForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='translations', to='app_cms.path')),
            ],
            options={
                'verbose_name': 'path Translation',
                'db_table': 'app_cms_path_translation',
                'db_tablespace': '',
                'managed': True,
                'default_permissions': (),
                'unique_together': {('language_code', 'master')},
            },
            bases=(parler.models.TranslatedFieldsModelMixin, models.Model),
        ),
        migrations.CreateModel(
            name='MenuItemTranslation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('language_code', models.CharField(db_index=True, max_length=15, verbose_name='Language')),
                ('text', models.CharField(default='', max_length=255, verbose_name='Menu item text')),
                ('url', models.CharField(default='', max_length=255, verbose_name='Url')),
                ('master', parler.fields.TranslationsForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='translations', to='app_cms.menuitem')),
            ],
            options={
                'verbose_name': 'menu item Translation',
                'db_table': 'app_cms_menuitem_translation',
                'db_tablespace': '',
                'managed': True,
                'default_permissions': (),
                'unique_together': {('language_code', 'master')},
            },
            bases=(parler.models.TranslatedFieldsModelMixin, models.Model),
        ),
        migrations.CreateModel(
            name='PropertyTextTranslation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('language_code', models.CharField(db_index=True, max_length=15, verbose_name='Language')),
                ('value', models.CharField(default='', max_length=255, verbose_name='Text value')),
                ('master', parler.fields.TranslationsForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='translations', to='app_cms.propertytext')),
            ],
            options={
                'verbose_name': 'Property Text Translation',
                'db_table': 'app_cms_propertytext_translation',
                'db_tablespace': '',
                'managed': True,
                'default_permissions': (),
                'unique_together': {('language_code', 'master')},
            },
            bases=(parler.models.TranslatedFieldsModelMixin, models.Model),
        ),
        migrations.CreateModel(
            name='PropertyTextRichTranslation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('language_code', models.CharField(db_index=True, max_length=15, verbose_name='Language')),
                ('value', models.TextField(default='', verbose_name='Text value')),
                ('master', parler.fields.TranslationsForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='translations', to='app_cms.propertytextrich')),
            ],
            options={
                'verbose_name': 'Property Text Rich Translation',
                'db_table': 'app_cms_propertytextrich_translation',
                'db_tablespace': '',
                'managed': True,
                'default_permissions': (),
                'unique_together': {('language_code', 'master')},
            },
            bases=(parler.models.TranslatedFieldsModelMixin, models.Model),
        ),
        migrations.CreateModel(
            name='PropertyTextLongTranslation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('language_code', models.CharField(db_index=True, max_length=15, verbose_name='Language')),
                ('value', models.TextField(default='', verbose_name='Text value')),
                ('master', parler.fields.TranslationsForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='translations', to='app_cms.propertytextlong')),
            ],
            options={
                'verbose_name': 'Property Text Long Translation',
                'db_table': 'app_cms_propertytextlong_translation',
                'db_tablespace': '',
                'managed': True,
                'default_permissions': (),
                'unique_together': {('language_code', 'master')},
            },
            bases=(parler.models.TranslatedFieldsModelMixin, models.Model),
        ),
    ]
